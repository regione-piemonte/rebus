/*
* SPDX-FileCopyrightText: (C) Copyright 2022 Regione Piemonte
* SPDX-License-Identifier: EUPL-1.2
*/
package it.csi.rebus.rebuscrus.integration.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RebuscTDatoFatturaSelector {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	public RebuscTDatoFatturaSelector() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdDatoFatturaIsNull() {
			addCriterion("id_dato_fattura is null");
			return (Criteria) this;
		}

		public Criteria andIdDatoFatturaIsNotNull() {
			addCriterion("id_dato_fattura is not null");
			return (Criteria) this;
		}

		public Criteria andIdDatoFatturaEqualTo(Long value) {
			addCriterion("id_dato_fattura =", value, "idDatoFattura");
			return (Criteria) this;
		}

		public Criteria andIdDatoFatturaNotEqualTo(Long value) {
			addCriterion("id_dato_fattura <>", value, "idDatoFattura");
			return (Criteria) this;
		}

		public Criteria andIdDatoFatturaGreaterThan(Long value) {
			addCriterion("id_dato_fattura >", value, "idDatoFattura");
			return (Criteria) this;
		}

		public Criteria andIdDatoFatturaGreaterThanOrEqualTo(Long value) {
			addCriterion("id_dato_fattura >=", value, "idDatoFattura");
			return (Criteria) this;
		}

		public Criteria andIdDatoFatturaLessThan(Long value) {
			addCriterion("id_dato_fattura <", value, "idDatoFattura");
			return (Criteria) this;
		}

		public Criteria andIdDatoFatturaLessThanOrEqualTo(Long value) {
			addCriterion("id_dato_fattura <=", value, "idDatoFattura");
			return (Criteria) this;
		}

		public Criteria andIdDatoFatturaIn(List<Long> values) {
			addCriterion("id_dato_fattura in", values, "idDatoFattura");
			return (Criteria) this;
		}

		public Criteria andIdDatoFatturaNotIn(List<Long> values) {
			addCriterion("id_dato_fattura not in", values, "idDatoFattura");
			return (Criteria) this;
		}

		public Criteria andIdDatoFatturaBetween(Long value1, Long value2) {
			addCriterion("id_dato_fattura between", value1, value2, "idDatoFattura");
			return (Criteria) this;
		}

		public Criteria andIdDatoFatturaNotBetween(Long value1, Long value2) {
			addCriterion("id_dato_fattura not between", value1, value2, "idDatoFattura");
			return (Criteria) this;
		}

		public Criteria andIdDatoSpesaIsNull() {
			addCriterion("id_dato_spesa is null");
			return (Criteria) this;
		}

		public Criteria andIdDatoSpesaIsNotNull() {
			addCriterion("id_dato_spesa is not null");
			return (Criteria) this;
		}

		public Criteria andIdDatoSpesaEqualTo(Long value) {
			addCriterion("id_dato_spesa =", value, "idDatoSpesa");
			return (Criteria) this;
		}

		public Criteria andIdDatoSpesaNotEqualTo(Long value) {
			addCriterion("id_dato_spesa <>", value, "idDatoSpesa");
			return (Criteria) this;
		}

		public Criteria andIdDatoSpesaGreaterThan(Long value) {
			addCriterion("id_dato_spesa >", value, "idDatoSpesa");
			return (Criteria) this;
		}

		public Criteria andIdDatoSpesaGreaterThanOrEqualTo(Long value) {
			addCriterion("id_dato_spesa >=", value, "idDatoSpesa");
			return (Criteria) this;
		}

		public Criteria andIdDatoSpesaLessThan(Long value) {
			addCriterion("id_dato_spesa <", value, "idDatoSpesa");
			return (Criteria) this;
		}

		public Criteria andIdDatoSpesaLessThanOrEqualTo(Long value) {
			addCriterion("id_dato_spesa <=", value, "idDatoSpesa");
			return (Criteria) this;
		}

		public Criteria andIdDatoSpesaIn(List<Long> values) {
			addCriterion("id_dato_spesa in", values, "idDatoSpesa");
			return (Criteria) this;
		}

		public Criteria andIdDatoSpesaNotIn(List<Long> values) {
			addCriterion("id_dato_spesa not in", values, "idDatoSpesa");
			return (Criteria) this;
		}

		public Criteria andIdDatoSpesaBetween(Long value1, Long value2) {
			addCriterion("id_dato_spesa between", value1, value2, "idDatoSpesa");
			return (Criteria) this;
		}

		public Criteria andIdDatoSpesaNotBetween(Long value1, Long value2) {
			addCriterion("id_dato_spesa not between", value1, value2, "idDatoSpesa");
			return (Criteria) this;
		}

		public Criteria andIdDocContribuzioneIsNull() {
			addCriterion("id_doc_contribuzione is null");
			return (Criteria) this;
		}

		public Criteria andIdDocContribuzioneIsNotNull() {
			addCriterion("id_doc_contribuzione is not null");
			return (Criteria) this;
		}

		public Criteria andIdDocContribuzioneEqualTo(Long value) {
			addCriterion("id_doc_contribuzione =", value, "idDocContribuzione");
			return (Criteria) this;
		}

		public Criteria andIdDocContribuzioneNotEqualTo(Long value) {
			addCriterion("id_doc_contribuzione <>", value, "idDocContribuzione");
			return (Criteria) this;
		}

		public Criteria andIdDocContribuzioneGreaterThan(Long value) {
			addCriterion("id_doc_contribuzione >", value, "idDocContribuzione");
			return (Criteria) this;
		}

		public Criteria andIdDocContribuzioneGreaterThanOrEqualTo(Long value) {
			addCriterion("id_doc_contribuzione >=", value, "idDocContribuzione");
			return (Criteria) this;
		}

		public Criteria andIdDocContribuzioneLessThan(Long value) {
			addCriterion("id_doc_contribuzione <", value, "idDocContribuzione");
			return (Criteria) this;
		}

		public Criteria andIdDocContribuzioneLessThanOrEqualTo(Long value) {
			addCriterion("id_doc_contribuzione <=", value, "idDocContribuzione");
			return (Criteria) this;
		}

		public Criteria andIdDocContribuzioneIn(List<Long> values) {
			addCriterion("id_doc_contribuzione in", values, "idDocContribuzione");
			return (Criteria) this;
		}

		public Criteria andIdDocContribuzioneNotIn(List<Long> values) {
			addCriterion("id_doc_contribuzione not in", values, "idDocContribuzione");
			return (Criteria) this;
		}

		public Criteria andIdDocContribuzioneBetween(Long value1, Long value2) {
			addCriterion("id_doc_contribuzione between", value1, value2, "idDocContribuzione");
			return (Criteria) this;
		}

		public Criteria andIdDocContribuzioneNotBetween(Long value1, Long value2) {
			addCriterion("id_doc_contribuzione not between", value1, value2, "idDocContribuzione");
			return (Criteria) this;
		}

		public Criteria andNumeroIsNull() {
			addCriterion("numero is null");
			return (Criteria) this;
		}

		public Criteria andNumeroIsNotNull() {
			addCriterion("numero is not null");
			return (Criteria) this;
		}

		public Criteria andNumeroEqualTo(String value) {
			addCriterion("numero =", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroNotEqualTo(String value) {
			addCriterion("numero <>", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroGreaterThan(String value) {
			addCriterion("numero >", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroGreaterThanOrEqualTo(String value) {
			addCriterion("numero >=", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroLessThan(String value) {
			addCriterion("numero <", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroLessThanOrEqualTo(String value) {
			addCriterion("numero <=", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroLike(String value) {
			addCriterion("numero like", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroNotLike(String value) {
			addCriterion("numero not like", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroIn(List<String> values) {
			addCriterion("numero in", values, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroNotIn(List<String> values) {
			addCriterion("numero not in", values, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroBetween(String value1, String value2) {
			addCriterion("numero between", value1, value2, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroNotBetween(String value1, String value2) {
			addCriterion("numero not between", value1, value2, "numero");
			return (Criteria) this;
		}

		public Criteria andDataIsNull() {
			addCriterion("data is null");
			return (Criteria) this;
		}

		public Criteria andDataIsNotNull() {
			addCriterion("data is not null");
			return (Criteria) this;
		}

		public Criteria andDataEqualTo(Date value) {
			addCriterionForJDBCDate("data =", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataNotEqualTo(Date value) {
			addCriterionForJDBCDate("data <>", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataGreaterThan(Date value) {
			addCriterionForJDBCDate("data >", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data >=", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataLessThan(Date value) {
			addCriterionForJDBCDate("data <", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data <=", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataIn(List<Date> values) {
			addCriterionForJDBCDate("data in", values, "data");
			return (Criteria) this;
		}

		public Criteria andDataNotIn(List<Date> values) {
			addCriterionForJDBCDate("data not in", values, "data");
			return (Criteria) this;
		}

		public Criteria andDataBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data between", value1, value2, "data");
			return (Criteria) this;
		}

		public Criteria andDataNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data not between", value1, value2, "data");
			return (Criteria) this;
		}

		public Criteria andImportoIsNull() {
			addCriterion("importo is null");
			return (Criteria) this;
		}

		public Criteria andImportoIsNotNull() {
			addCriterion("importo is not null");
			return (Criteria) this;
		}

		public Criteria andImportoEqualTo(Double value) {
			addCriterion("importo =", value, "importo");
			return (Criteria) this;
		}

		public Criteria andImportoNotEqualTo(Double value) {
			addCriterion("importo <>", value, "importo");
			return (Criteria) this;
		}

		public Criteria andImportoGreaterThan(Double value) {
			addCriterion("importo >", value, "importo");
			return (Criteria) this;
		}

		public Criteria andImportoGreaterThanOrEqualTo(Double value) {
			addCriterion("importo >=", value, "importo");
			return (Criteria) this;
		}

		public Criteria andImportoLessThan(Double value) {
			addCriterion("importo <", value, "importo");
			return (Criteria) this;
		}

		public Criteria andImportoLessThanOrEqualTo(Double value) {
			addCriterion("importo <=", value, "importo");
			return (Criteria) this;
		}

		public Criteria andImportoIn(List<Double> values) {
			addCriterion("importo in", values, "importo");
			return (Criteria) this;
		}

		public Criteria andImportoNotIn(List<Double> values) {
			addCriterion("importo not in", values, "importo");
			return (Criteria) this;
		}

		public Criteria andImportoBetween(Double value1, Double value2) {
			addCriterion("importo between", value1, value2, "importo");
			return (Criteria) this;
		}

		public Criteria andImportoNotBetween(Double value1, Double value2) {
			addCriterion("importo not between", value1, value2, "importo");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornIsNull() {
			addCriterion("nr_quietanza_az_forn is null");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornIsNotNull() {
			addCriterion("nr_quietanza_az_forn is not null");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornEqualTo(String value) {
			addCriterion("nr_quietanza_az_forn =", value, "nrQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornNotEqualTo(String value) {
			addCriterion("nr_quietanza_az_forn <>", value, "nrQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornGreaterThan(String value) {
			addCriterion("nr_quietanza_az_forn >", value, "nrQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornGreaterThanOrEqualTo(String value) {
			addCriterion("nr_quietanza_az_forn >=", value, "nrQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornLessThan(String value) {
			addCriterion("nr_quietanza_az_forn <", value, "nrQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornLessThanOrEqualTo(String value) {
			addCriterion("nr_quietanza_az_forn <=", value, "nrQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornLike(String value) {
			addCriterion("nr_quietanza_az_forn like", value, "nrQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornNotLike(String value) {
			addCriterion("nr_quietanza_az_forn not like", value, "nrQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornIn(List<String> values) {
			addCriterion("nr_quietanza_az_forn in", values, "nrQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornNotIn(List<String> values) {
			addCriterion("nr_quietanza_az_forn not in", values, "nrQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornBetween(String value1, String value2) {
			addCriterion("nr_quietanza_az_forn between", value1, value2, "nrQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornNotBetween(String value1, String value2) {
			addCriterion("nr_quietanza_az_forn not between", value1, value2, "nrQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andDataQuietanzaAzFornIsNull() {
			addCriterion("data_quietanza_az_forn is null");
			return (Criteria) this;
		}

		public Criteria andDataQuietanzaAzFornIsNotNull() {
			addCriterion("data_quietanza_az_forn is not null");
			return (Criteria) this;
		}

		public Criteria andDataQuietanzaAzFornEqualTo(Date value) {
			addCriterionForJDBCDate("data_quietanza_az_forn =", value, "dataQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andDataQuietanzaAzFornNotEqualTo(Date value) {
			addCriterionForJDBCDate("data_quietanza_az_forn <>", value, "dataQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andDataQuietanzaAzFornGreaterThan(Date value) {
			addCriterionForJDBCDate("data_quietanza_az_forn >", value, "dataQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andDataQuietanzaAzFornGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_quietanza_az_forn >=", value, "dataQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andDataQuietanzaAzFornLessThan(Date value) {
			addCriterionForJDBCDate("data_quietanza_az_forn <", value, "dataQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andDataQuietanzaAzFornLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_quietanza_az_forn <=", value, "dataQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andDataQuietanzaAzFornIn(List<Date> values) {
			addCriterionForJDBCDate("data_quietanza_az_forn in", values, "dataQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andDataQuietanzaAzFornNotIn(List<Date> values) {
			addCriterionForJDBCDate("data_quietanza_az_forn not in", values, "dataQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andDataQuietanzaAzFornBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_quietanza_az_forn between", value1, value2, "dataQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andDataQuietanzaAzFornNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_quietanza_az_forn not between", value1, value2, "dataQuietanzaAzForn");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocQuietanzaIsNull() {
			addCriterion("id_tipo_doc_quietanza is null");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocQuietanzaIsNotNull() {
			addCriterion("id_tipo_doc_quietanza is not null");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocQuietanzaEqualTo(Double value) {
			addCriterion("id_tipo_doc_quietanza =", value, "idTipoDocQuietanza");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocQuietanzaNotEqualTo(Double value) {
			addCriterion("id_tipo_doc_quietanza <>", value, "idTipoDocQuietanza");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocQuietanzaGreaterThan(Double value) {
			addCriterion("id_tipo_doc_quietanza >", value, "idTipoDocQuietanza");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocQuietanzaGreaterThanOrEqualTo(Double value) {
			addCriterion("id_tipo_doc_quietanza >=", value, "idTipoDocQuietanza");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocQuietanzaLessThan(Double value) {
			addCriterion("id_tipo_doc_quietanza <", value, "idTipoDocQuietanza");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocQuietanzaLessThanOrEqualTo(Double value) {
			addCriterion("id_tipo_doc_quietanza <=", value, "idTipoDocQuietanza");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocQuietanzaIn(List<Double> values) {
			addCriterion("id_tipo_doc_quietanza in", values, "idTipoDocQuietanza");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocQuietanzaNotIn(List<Double> values) {
			addCriterion("id_tipo_doc_quietanza not in", values, "idTipoDocQuietanza");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocQuietanzaBetween(Double value1, Double value2) {
			addCriterion("id_tipo_doc_quietanza between", value1, value2, "idTipoDocQuietanza");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocQuietanzaNotBetween(Double value1, Double value2) {
			addCriterion("id_tipo_doc_quietanza not between", value1, value2, "idTipoDocQuietanza");
			return (Criteria) this;
		}

		public Criteria andNumeroLikeInsensitive(String value) {
			addCriterion("upper(numero) like", value.toUpperCase(), "numero");
			return (Criteria) this;
		}

		public Criteria andNrQuietanzaAzFornLikeInsensitive(String value) {
			addCriterion("upper(nr_quietanza_az_forn) like", value.toUpperCase(), "nrQuietanzaAzForn");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table rebusc_t_dato_fattura
	 * @mbg.generated  Thu Dec 16 16:26:20 CET 2021
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rebusc_t_dato_fattura
     *
     * @mbg.generated do_not_delete_during_merge Wed Nov 24 17:18:29 CET 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}