/*
* SPDX-FileCopyrightText: (C) Copyright 2022 Regione Piemonte
* SPDX-License-Identifier: EUPL-1.2
*/
package it.csi.rebus.rebuscrus.integration.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RebuscTDatoBonificoSelector {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	public RebuscTDatoBonificoSelector() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdDatoBonificoIsNull() {
			addCriterion("id_dato_bonifico is null");
			return (Criteria) this;
		}

		public Criteria andIdDatoBonificoIsNotNull() {
			addCriterion("id_dato_bonifico is not null");
			return (Criteria) this;
		}

		public Criteria andIdDatoBonificoEqualTo(Long value) {
			addCriterion("id_dato_bonifico =", value, "idDatoBonifico");
			return (Criteria) this;
		}

		public Criteria andIdDatoBonificoNotEqualTo(Long value) {
			addCriterion("id_dato_bonifico <>", value, "idDatoBonifico");
			return (Criteria) this;
		}

		public Criteria andIdDatoBonificoGreaterThan(Long value) {
			addCriterion("id_dato_bonifico >", value, "idDatoBonifico");
			return (Criteria) this;
		}

		public Criteria andIdDatoBonificoGreaterThanOrEqualTo(Long value) {
			addCriterion("id_dato_bonifico >=", value, "idDatoBonifico");
			return (Criteria) this;
		}

		public Criteria andIdDatoBonificoLessThan(Long value) {
			addCriterion("id_dato_bonifico <", value, "idDatoBonifico");
			return (Criteria) this;
		}

		public Criteria andIdDatoBonificoLessThanOrEqualTo(Long value) {
			addCriterion("id_dato_bonifico <=", value, "idDatoBonifico");
			return (Criteria) this;
		}

		public Criteria andIdDatoBonificoIn(List<Long> values) {
			addCriterion("id_dato_bonifico in", values, "idDatoBonifico");
			return (Criteria) this;
		}

		public Criteria andIdDatoBonificoNotIn(List<Long> values) {
			addCriterion("id_dato_bonifico not in", values, "idDatoBonifico");
			return (Criteria) this;
		}

		public Criteria andIdDatoBonificoBetween(Long value1, Long value2) {
			addCriterion("id_dato_bonifico between", value1, value2, "idDatoBonifico");
			return (Criteria) this;
		}

		public Criteria andIdDatoBonificoNotBetween(Long value1, Long value2) {
			addCriterion("id_dato_bonifico not between", value1, value2, "idDatoBonifico");
			return (Criteria) this;
		}

		public Criteria andDataBonificoIsNull() {
			addCriterion("data_bonifico is null");
			return (Criteria) this;
		}

		public Criteria andDataBonificoIsNotNull() {
			addCriterion("data_bonifico is not null");
			return (Criteria) this;
		}

		public Criteria andDataBonificoEqualTo(Date value) {
			addCriterionForJDBCDate("data_bonifico =", value, "dataBonifico");
			return (Criteria) this;
		}

		public Criteria andDataBonificoNotEqualTo(Date value) {
			addCriterionForJDBCDate("data_bonifico <>", value, "dataBonifico");
			return (Criteria) this;
		}

		public Criteria andDataBonificoGreaterThan(Date value) {
			addCriterionForJDBCDate("data_bonifico >", value, "dataBonifico");
			return (Criteria) this;
		}

		public Criteria andDataBonificoGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_bonifico >=", value, "dataBonifico");
			return (Criteria) this;
		}

		public Criteria andDataBonificoLessThan(Date value) {
			addCriterionForJDBCDate("data_bonifico <", value, "dataBonifico");
			return (Criteria) this;
		}

		public Criteria andDataBonificoLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_bonifico <=", value, "dataBonifico");
			return (Criteria) this;
		}

		public Criteria andDataBonificoIn(List<Date> values) {
			addCriterionForJDBCDate("data_bonifico in", values, "dataBonifico");
			return (Criteria) this;
		}

		public Criteria andDataBonificoNotIn(List<Date> values) {
			addCriterionForJDBCDate("data_bonifico not in", values, "dataBonifico");
			return (Criteria) this;
		}

		public Criteria andDataBonificoBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_bonifico between", value1, value2, "dataBonifico");
			return (Criteria) this;
		}

		public Criteria andDataBonificoNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_bonifico not between", value1, value2, "dataBonifico");
			return (Criteria) this;
		}

		public Criteria andImportoBonificoIsNull() {
			addCriterion("importo_bonifico is null");
			return (Criteria) this;
		}

		public Criteria andImportoBonificoIsNotNull() {
			addCriterion("importo_bonifico is not null");
			return (Criteria) this;
		}

		public Criteria andImportoBonificoEqualTo(Double value) {
			addCriterion("importo_bonifico =", value, "importoBonifico");
			return (Criteria) this;
		}

		public Criteria andImportoBonificoNotEqualTo(Double value) {
			addCriterion("importo_bonifico <>", value, "importoBonifico");
			return (Criteria) this;
		}

		public Criteria andImportoBonificoGreaterThan(Double value) {
			addCriterion("importo_bonifico >", value, "importoBonifico");
			return (Criteria) this;
		}

		public Criteria andImportoBonificoGreaterThanOrEqualTo(Double value) {
			addCriterion("importo_bonifico >=", value, "importoBonifico");
			return (Criteria) this;
		}

		public Criteria andImportoBonificoLessThan(Double value) {
			addCriterion("importo_bonifico <", value, "importoBonifico");
			return (Criteria) this;
		}

		public Criteria andImportoBonificoLessThanOrEqualTo(Double value) {
			addCriterion("importo_bonifico <=", value, "importoBonifico");
			return (Criteria) this;
		}

		public Criteria andImportoBonificoIn(List<Double> values) {
			addCriterion("importo_bonifico in", values, "importoBonifico");
			return (Criteria) this;
		}

		public Criteria andImportoBonificoNotIn(List<Double> values) {
			addCriterion("importo_bonifico not in", values, "importoBonifico");
			return (Criteria) this;
		}

		public Criteria andImportoBonificoBetween(Double value1, Double value2) {
			addCriterion("importo_bonifico between", value1, value2, "importoBonifico");
			return (Criteria) this;
		}

		public Criteria andImportoBonificoNotBetween(Double value1, Double value2) {
			addCriterion("importo_bonifico not between", value1, value2, "importoBonifico");
			return (Criteria) this;
		}

		public Criteria andCroIsNull() {
			addCriterion("cro is null");
			return (Criteria) this;
		}

		public Criteria andCroIsNotNull() {
			addCriterion("cro is not null");
			return (Criteria) this;
		}

		public Criteria andCroEqualTo(String value) {
			addCriterion("cro =", value, "cro");
			return (Criteria) this;
		}

		public Criteria andCroNotEqualTo(String value) {
			addCriterion("cro <>", value, "cro");
			return (Criteria) this;
		}

		public Criteria andCroGreaterThan(String value) {
			addCriterion("cro >", value, "cro");
			return (Criteria) this;
		}

		public Criteria andCroGreaterThanOrEqualTo(String value) {
			addCriterion("cro >=", value, "cro");
			return (Criteria) this;
		}

		public Criteria andCroLessThan(String value) {
			addCriterion("cro <", value, "cro");
			return (Criteria) this;
		}

		public Criteria andCroLessThanOrEqualTo(String value) {
			addCriterion("cro <=", value, "cro");
			return (Criteria) this;
		}

		public Criteria andCroLike(String value) {
			addCriterion("cro like", value, "cro");
			return (Criteria) this;
		}

		public Criteria andCroNotLike(String value) {
			addCriterion("cro not like", value, "cro");
			return (Criteria) this;
		}

		public Criteria andCroIn(List<String> values) {
			addCriterion("cro in", values, "cro");
			return (Criteria) this;
		}

		public Criteria andCroNotIn(List<String> values) {
			addCriterion("cro not in", values, "cro");
			return (Criteria) this;
		}

		public Criteria andCroBetween(String value1, String value2) {
			addCriterion("cro between", value1, value2, "cro");
			return (Criteria) this;
		}

		public Criteria andCroNotBetween(String value1, String value2) {
			addCriterion("cro not between", value1, value2, "cro");
			return (Criteria) this;
		}

		public Criteria andCroLikeInsensitive(String value) {
			addCriterion("upper(cro) like", value.toUpperCase(), "cro");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table rebusc_t_dato_bonifico
	 * @mbg.generated  Fri Mar 04 15:16:01 CET 2022
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rebusc_t_dato_bonifico
     *
     * @mbg.generated do_not_delete_during_merge Fri Mar 04 15:15:52 CET 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}