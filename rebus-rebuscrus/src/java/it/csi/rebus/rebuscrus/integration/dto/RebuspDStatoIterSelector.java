/*
* SPDX-FileCopyrightText: (C) Copyright 2022 Regione Piemonte
* SPDX-License-Identifier: EUPL-1.2
*/
package it.csi.rebus.rebuscrus.integration.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RebuspDStatoIterSelector {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    public RebuspDStatoIterSelector() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdStatoIterIsNull() {
            addCriterion("id_stato_iter is null");
            return (Criteria) this;
        }

        public Criteria andIdStatoIterIsNotNull() {
            addCriterion("id_stato_iter is not null");
            return (Criteria) this;
        }

        public Criteria andIdStatoIterEqualTo(Long value) {
            addCriterion("id_stato_iter =", value, "idStatoIter");
            return (Criteria) this;
        }

        public Criteria andIdStatoIterNotEqualTo(Long value) {
            addCriterion("id_stato_iter <>", value, "idStatoIter");
            return (Criteria) this;
        }

        public Criteria andIdStatoIterGreaterThan(Long value) {
            addCriterion("id_stato_iter >", value, "idStatoIter");
            return (Criteria) this;
        }

        public Criteria andIdStatoIterGreaterThanOrEqualTo(Long value) {
            addCriterion("id_stato_iter >=", value, "idStatoIter");
            return (Criteria) this;
        }

        public Criteria andIdStatoIterLessThan(Long value) {
            addCriterion("id_stato_iter <", value, "idStatoIter");
            return (Criteria) this;
        }

        public Criteria andIdStatoIterLessThanOrEqualTo(Long value) {
            addCriterion("id_stato_iter <=", value, "idStatoIter");
            return (Criteria) this;
        }

        public Criteria andIdStatoIterIn(List<Long> values) {
            addCriterion("id_stato_iter in", values, "idStatoIter");
            return (Criteria) this;
        }

        public Criteria andIdStatoIterNotIn(List<Long> values) {
            addCriterion("id_stato_iter not in", values, "idStatoIter");
            return (Criteria) this;
        }

        public Criteria andIdStatoIterBetween(Long value1, Long value2) {
            addCriterion("id_stato_iter between", value1, value2, "idStatoIter");
            return (Criteria) this;
        }

        public Criteria andIdStatoIterNotBetween(Long value1, Long value2) {
            addCriterion("id_stato_iter not between", value1, value2, "idStatoIter");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterIsNull() {
            addCriterion("desc_stato_iter is null");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterIsNotNull() {
            addCriterion("desc_stato_iter is not null");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterEqualTo(String value) {
            addCriterion("desc_stato_iter =", value, "descStatoIter");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterNotEqualTo(String value) {
            addCriterion("desc_stato_iter <>", value, "descStatoIter");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterGreaterThan(String value) {
            addCriterion("desc_stato_iter >", value, "descStatoIter");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterGreaterThanOrEqualTo(String value) {
            addCriterion("desc_stato_iter >=", value, "descStatoIter");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterLessThan(String value) {
            addCriterion("desc_stato_iter <", value, "descStatoIter");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterLessThanOrEqualTo(String value) {
            addCriterion("desc_stato_iter <=", value, "descStatoIter");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterLike(String value) {
            addCriterion("desc_stato_iter like", value, "descStatoIter");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterNotLike(String value) {
            addCriterion("desc_stato_iter not like", value, "descStatoIter");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterIn(List<String> values) {
            addCriterion("desc_stato_iter in", values, "descStatoIter");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterNotIn(List<String> values) {
            addCriterion("desc_stato_iter not in", values, "descStatoIter");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterBetween(String value1, String value2) {
            addCriterion("desc_stato_iter between", value1, value2, "descStatoIter");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterNotBetween(String value1, String value2) {
            addCriterion("desc_stato_iter not between", value1, value2, "descStatoIter");
            return (Criteria) this;
        }

        public Criteria andDataInizioValiditaIsNull() {
            addCriterion("data_inizio_validita is null");
            return (Criteria) this;
        }

        public Criteria andDataInizioValiditaIsNotNull() {
            addCriterion("data_inizio_validita is not null");
            return (Criteria) this;
        }

        public Criteria andDataInizioValiditaEqualTo(Date value) {
            addCriterionForJDBCDate("data_inizio_validita =", value, "dataInizioValidita");
            return (Criteria) this;
        }

        public Criteria andDataInizioValiditaNotEqualTo(Date value) {
            addCriterionForJDBCDate("data_inizio_validita <>", value, "dataInizioValidita");
            return (Criteria) this;
        }

        public Criteria andDataInizioValiditaGreaterThan(Date value) {
            addCriterionForJDBCDate("data_inizio_validita >", value, "dataInizioValidita");
            return (Criteria) this;
        }

        public Criteria andDataInizioValiditaGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("data_inizio_validita >=", value, "dataInizioValidita");
            return (Criteria) this;
        }

        public Criteria andDataInizioValiditaLessThan(Date value) {
            addCriterionForJDBCDate("data_inizio_validita <", value, "dataInizioValidita");
            return (Criteria) this;
        }

        public Criteria andDataInizioValiditaLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("data_inizio_validita <=", value, "dataInizioValidita");
            return (Criteria) this;
        }

        public Criteria andDataInizioValiditaIn(List<Date> values) {
            addCriterionForJDBCDate("data_inizio_validita in", values, "dataInizioValidita");
            return (Criteria) this;
        }

        public Criteria andDataInizioValiditaNotIn(List<Date> values) {
            addCriterionForJDBCDate("data_inizio_validita not in", values, "dataInizioValidita");
            return (Criteria) this;
        }

        public Criteria andDataInizioValiditaBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("data_inizio_validita between", value1, value2, "dataInizioValidita");
            return (Criteria) this;
        }

        public Criteria andDataInizioValiditaNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("data_inizio_validita not between", value1, value2, "dataInizioValidita");
            return (Criteria) this;
        }

        public Criteria andDataFineValiditaIsNull() {
            addCriterion("data_fine_validita is null");
            return (Criteria) this;
        }

        public Criteria andDataFineValiditaIsNotNull() {
            addCriterion("data_fine_validita is not null");
            return (Criteria) this;
        }

        public Criteria andDataFineValiditaEqualTo(Date value) {
            addCriterionForJDBCDate("data_fine_validita =", value, "dataFineValidita");
            return (Criteria) this;
        }

        public Criteria andDataFineValiditaNotEqualTo(Date value) {
            addCriterionForJDBCDate("data_fine_validita <>", value, "dataFineValidita");
            return (Criteria) this;
        }

        public Criteria andDataFineValiditaGreaterThan(Date value) {
            addCriterionForJDBCDate("data_fine_validita >", value, "dataFineValidita");
            return (Criteria) this;
        }

        public Criteria andDataFineValiditaGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("data_fine_validita >=", value, "dataFineValidita");
            return (Criteria) this;
        }

        public Criteria andDataFineValiditaLessThan(Date value) {
            addCriterionForJDBCDate("data_fine_validita <", value, "dataFineValidita");
            return (Criteria) this;
        }

        public Criteria andDataFineValiditaLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("data_fine_validita <=", value, "dataFineValidita");
            return (Criteria) this;
        }

        public Criteria andDataFineValiditaIn(List<Date> values) {
            addCriterionForJDBCDate("data_fine_validita in", values, "dataFineValidita");
            return (Criteria) this;
        }

        public Criteria andDataFineValiditaNotIn(List<Date> values) {
            addCriterionForJDBCDate("data_fine_validita not in", values, "dataFineValidita");
            return (Criteria) this;
        }

        public Criteria andDataFineValiditaBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("data_fine_validita between", value1, value2, "dataFineValidita");
            return (Criteria) this;
        }

        public Criteria andDataFineValiditaNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("data_fine_validita not between", value1, value2, "dataFineValidita");
            return (Criteria) this;
        }

        public Criteria andDescStatoIterLikeInsensitive(String value) {
            addCriterion("upper(desc_stato_iter) like", value.toUpperCase(), "descStatoIter");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated do_not_delete_during_merge Wed Jan 22 16:49:54 CET 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rebusp_d_stato_iter
     *
     * @mbg.generated Wed Jan 22 16:49:54 CET 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}