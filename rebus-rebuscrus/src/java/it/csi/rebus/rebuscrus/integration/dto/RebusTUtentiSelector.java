/*
* SPDX-FileCopyrightText: (C) Copyright 2022 Regione Piemonte
* SPDX-License-Identifier: EUPL-1.2
*/
package it.csi.rebus.rebuscrus.integration.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RebusTUtentiSelector {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	public RebusTUtentiSelector() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdUtenteIsNull() {
			addCriterion("id_utente is null");
			return (Criteria) this;
		}

		public Criteria andIdUtenteIsNotNull() {
			addCriterion("id_utente is not null");
			return (Criteria) this;
		}

		public Criteria andIdUtenteEqualTo(Long value) {
			addCriterion("id_utente =", value, "idUtente");
			return (Criteria) this;
		}

		public Criteria andIdUtenteNotEqualTo(Long value) {
			addCriterion("id_utente <>", value, "idUtente");
			return (Criteria) this;
		}

		public Criteria andIdUtenteGreaterThan(Long value) {
			addCriterion("id_utente >", value, "idUtente");
			return (Criteria) this;
		}

		public Criteria andIdUtenteGreaterThanOrEqualTo(Long value) {
			addCriterion("id_utente >=", value, "idUtente");
			return (Criteria) this;
		}

		public Criteria andIdUtenteLessThan(Long value) {
			addCriterion("id_utente <", value, "idUtente");
			return (Criteria) this;
		}

		public Criteria andIdUtenteLessThanOrEqualTo(Long value) {
			addCriterion("id_utente <=", value, "idUtente");
			return (Criteria) this;
		}

		public Criteria andIdUtenteIn(List<Long> values) {
			addCriterion("id_utente in", values, "idUtente");
			return (Criteria) this;
		}

		public Criteria andIdUtenteNotIn(List<Long> values) {
			addCriterion("id_utente not in", values, "idUtente");
			return (Criteria) this;
		}

		public Criteria andIdUtenteBetween(Long value1, Long value2) {
			addCriterion("id_utente between", value1, value2, "idUtente");
			return (Criteria) this;
		}

		public Criteria andIdUtenteNotBetween(Long value1, Long value2) {
			addCriterion("id_utente not between", value1, value2, "idUtente");
			return (Criteria) this;
		}

		public Criteria andCfIsNull() {
			addCriterion("cf is null");
			return (Criteria) this;
		}

		public Criteria andCfIsNotNull() {
			addCriterion("cf is not null");
			return (Criteria) this;
		}

		public Criteria andCfEqualTo(String value) {
			addCriterion("cf =", value, "cf");
			return (Criteria) this;
		}

		public Criteria andCfNotEqualTo(String value) {
			addCriterion("cf <>", value, "cf");
			return (Criteria) this;
		}

		public Criteria andCfGreaterThan(String value) {
			addCriterion("cf >", value, "cf");
			return (Criteria) this;
		}

		public Criteria andCfGreaterThanOrEqualTo(String value) {
			addCriterion("cf >=", value, "cf");
			return (Criteria) this;
		}

		public Criteria andCfLessThan(String value) {
			addCriterion("cf <", value, "cf");
			return (Criteria) this;
		}

		public Criteria andCfLessThanOrEqualTo(String value) {
			addCriterion("cf <=", value, "cf");
			return (Criteria) this;
		}

		public Criteria andCfLike(String value) {
			addCriterion("cf like", value, "cf");
			return (Criteria) this;
		}

		public Criteria andCfNotLike(String value) {
			addCriterion("cf not like", value, "cf");
			return (Criteria) this;
		}

		public Criteria andCfIn(List<String> values) {
			addCriterion("cf in", values, "cf");
			return (Criteria) this;
		}

		public Criteria andCfNotIn(List<String> values) {
			addCriterion("cf not in", values, "cf");
			return (Criteria) this;
		}

		public Criteria andCfBetween(String value1, String value2) {
			addCriterion("cf between", value1, value2, "cf");
			return (Criteria) this;
		}

		public Criteria andCfNotBetween(String value1, String value2) {
			addCriterion("cf not between", value1, value2, "cf");
			return (Criteria) this;
		}

		public Criteria andNomeIsNull() {
			addCriterion("nome is null");
			return (Criteria) this;
		}

		public Criteria andNomeIsNotNull() {
			addCriterion("nome is not null");
			return (Criteria) this;
		}

		public Criteria andNomeEqualTo(String value) {
			addCriterion("nome =", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeNotEqualTo(String value) {
			addCriterion("nome <>", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeGreaterThan(String value) {
			addCriterion("nome >", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeGreaterThanOrEqualTo(String value) {
			addCriterion("nome >=", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeLessThan(String value) {
			addCriterion("nome <", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeLessThanOrEqualTo(String value) {
			addCriterion("nome <=", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeLike(String value) {
			addCriterion("nome like", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeNotLike(String value) {
			addCriterion("nome not like", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeIn(List<String> values) {
			addCriterion("nome in", values, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeNotIn(List<String> values) {
			addCriterion("nome not in", values, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeBetween(String value1, String value2) {
			addCriterion("nome between", value1, value2, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeNotBetween(String value1, String value2) {
			addCriterion("nome not between", value1, value2, "nome");
			return (Criteria) this;
		}

		public Criteria andCognomeIsNull() {
			addCriterion("cognome is null");
			return (Criteria) this;
		}

		public Criteria andCognomeIsNotNull() {
			addCriterion("cognome is not null");
			return (Criteria) this;
		}

		public Criteria andCognomeEqualTo(String value) {
			addCriterion("cognome =", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeNotEqualTo(String value) {
			addCriterion("cognome <>", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeGreaterThan(String value) {
			addCriterion("cognome >", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeGreaterThanOrEqualTo(String value) {
			addCriterion("cognome >=", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeLessThan(String value) {
			addCriterion("cognome <", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeLessThanOrEqualTo(String value) {
			addCriterion("cognome <=", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeLike(String value) {
			addCriterion("cognome like", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeNotLike(String value) {
			addCriterion("cognome not like", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeIn(List<String> values) {
			addCriterion("cognome in", values, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeNotIn(List<String> values) {
			addCriterion("cognome not in", values, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeBetween(String value1, String value2) {
			addCriterion("cognome between", value1, value2, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeNotBetween(String value1, String value2) {
			addCriterion("cognome not between", value1, value2, "cognome");
			return (Criteria) this;
		}

		public Criteria andDataCreazioneIsNull() {
			addCriterion("data_creazione is null");
			return (Criteria) this;
		}

		public Criteria andDataCreazioneIsNotNull() {
			addCriterion("data_creazione is not null");
			return (Criteria) this;
		}

		public Criteria andDataCreazioneEqualTo(Date value) {
			addCriterionForJDBCDate("data_creazione =", value, "dataCreazione");
			return (Criteria) this;
		}

		public Criteria andDataCreazioneNotEqualTo(Date value) {
			addCriterionForJDBCDate("data_creazione <>", value, "dataCreazione");
			return (Criteria) this;
		}

		public Criteria andDataCreazioneGreaterThan(Date value) {
			addCriterionForJDBCDate("data_creazione >", value, "dataCreazione");
			return (Criteria) this;
		}

		public Criteria andDataCreazioneGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_creazione >=", value, "dataCreazione");
			return (Criteria) this;
		}

		public Criteria andDataCreazioneLessThan(Date value) {
			addCriterionForJDBCDate("data_creazione <", value, "dataCreazione");
			return (Criteria) this;
		}

		public Criteria andDataCreazioneLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_creazione <=", value, "dataCreazione");
			return (Criteria) this;
		}

		public Criteria andDataCreazioneIn(List<Date> values) {
			addCriterionForJDBCDate("data_creazione in", values, "dataCreazione");
			return (Criteria) this;
		}

		public Criteria andDataCreazioneNotIn(List<Date> values) {
			addCriterionForJDBCDate("data_creazione not in", values, "dataCreazione");
			return (Criteria) this;
		}

		public Criteria andDataCreazioneBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_creazione between", value1, value2, "dataCreazione");
			return (Criteria) this;
		}

		public Criteria andDataCreazioneNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_creazione not between", value1, value2, "dataCreazione");
			return (Criteria) this;
		}

		public Criteria andDataCancellazioneIsNull() {
			addCriterion("data_cancellazione is null");
			return (Criteria) this;
		}

		public Criteria andDataCancellazioneIsNotNull() {
			addCriterion("data_cancellazione is not null");
			return (Criteria) this;
		}

		public Criteria andDataCancellazioneEqualTo(Date value) {
			addCriterionForJDBCDate("data_cancellazione =", value, "dataCancellazione");
			return (Criteria) this;
		}

		public Criteria andDataCancellazioneNotEqualTo(Date value) {
			addCriterionForJDBCDate("data_cancellazione <>", value, "dataCancellazione");
			return (Criteria) this;
		}

		public Criteria andDataCancellazioneGreaterThan(Date value) {
			addCriterionForJDBCDate("data_cancellazione >", value, "dataCancellazione");
			return (Criteria) this;
		}

		public Criteria andDataCancellazioneGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_cancellazione >=", value, "dataCancellazione");
			return (Criteria) this;
		}

		public Criteria andDataCancellazioneLessThan(Date value) {
			addCriterionForJDBCDate("data_cancellazione <", value, "dataCancellazione");
			return (Criteria) this;
		}

		public Criteria andDataCancellazioneLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_cancellazione <=", value, "dataCancellazione");
			return (Criteria) this;
		}

		public Criteria andDataCancellazioneIn(List<Date> values) {
			addCriterionForJDBCDate("data_cancellazione in", values, "dataCancellazione");
			return (Criteria) this;
		}

		public Criteria andDataCancellazioneNotIn(List<Date> values) {
			addCriterionForJDBCDate("data_cancellazione not in", values, "dataCancellazione");
			return (Criteria) this;
		}

		public Criteria andDataCancellazioneBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_cancellazione between", value1, value2, "dataCancellazione");
			return (Criteria) this;
		}

		public Criteria andDataCancellazioneNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_cancellazione not between", value1, value2, "dataCancellazione");
			return (Criteria) this;
		}

		public Criteria andCfLikeInsensitive(String value) {
			addCriterion("upper(cf) like", value.toUpperCase(), "cf");
			return (Criteria) this;
		}

		public Criteria andNomeLikeInsensitive(String value) {
			addCriterion("upper(nome) like", value.toUpperCase(), "nome");
			return (Criteria) this;
		}

		public Criteria andCognomeLikeInsensitive(String value) {
			addCriterion("upper(cognome) like", value.toUpperCase(), "cognome");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table rebus_t_utenti
	 * @mbg.generated  Wed Dec 04 19:05:15 CET 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rebus_t_utenti
     *
     * @mbg.generated do_not_delete_during_merge Mon Oct 21 17:20:01 CEST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}