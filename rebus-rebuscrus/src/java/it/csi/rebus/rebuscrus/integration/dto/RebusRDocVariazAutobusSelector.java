/*
* SPDX-FileCopyrightText: (C) Copyright 2022 Regione Piemonte
* SPDX-License-Identifier: EUPL-1.2
*/
package it.csi.rebus.rebuscrus.integration.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RebusRDocVariazAutobusSelector {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	public RebusRDocVariazAutobusSelector() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdVariazAutobusIsNull() {
			addCriterion("id_variaz_autobus is null");
			return (Criteria) this;
		}

		public Criteria andIdVariazAutobusIsNotNull() {
			addCriterion("id_variaz_autobus is not null");
			return (Criteria) this;
		}

		public Criteria andIdVariazAutobusEqualTo(Long value) {
			addCriterion("id_variaz_autobus =", value, "idVariazAutobus");
			return (Criteria) this;
		}

		public Criteria andIdVariazAutobusNotEqualTo(Long value) {
			addCriterion("id_variaz_autobus <>", value, "idVariazAutobus");
			return (Criteria) this;
		}

		public Criteria andIdVariazAutobusGreaterThan(Long value) {
			addCriterion("id_variaz_autobus >", value, "idVariazAutobus");
			return (Criteria) this;
		}

		public Criteria andIdVariazAutobusGreaterThanOrEqualTo(Long value) {
			addCriterion("id_variaz_autobus >=", value, "idVariazAutobus");
			return (Criteria) this;
		}

		public Criteria andIdVariazAutobusLessThan(Long value) {
			addCriterion("id_variaz_autobus <", value, "idVariazAutobus");
			return (Criteria) this;
		}

		public Criteria andIdVariazAutobusLessThanOrEqualTo(Long value) {
			addCriterion("id_variaz_autobus <=", value, "idVariazAutobus");
			return (Criteria) this;
		}

		public Criteria andIdVariazAutobusIn(List<Long> values) {
			addCriterion("id_variaz_autobus in", values, "idVariazAutobus");
			return (Criteria) this;
		}

		public Criteria andIdVariazAutobusNotIn(List<Long> values) {
			addCriterion("id_variaz_autobus not in", values, "idVariazAutobus");
			return (Criteria) this;
		}

		public Criteria andIdVariazAutobusBetween(Long value1, Long value2) {
			addCriterion("id_variaz_autobus between", value1, value2, "idVariazAutobus");
			return (Criteria) this;
		}

		public Criteria andIdVariazAutobusNotBetween(Long value1, Long value2) {
			addCriterion("id_variaz_autobus not between", value1, value2, "idVariazAutobus");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocumentoIsNull() {
			addCriterion("id_tipo_documento is null");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocumentoIsNotNull() {
			addCriterion("id_tipo_documento is not null");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocumentoEqualTo(Long value) {
			addCriterion("id_tipo_documento =", value, "idTipoDocumento");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocumentoNotEqualTo(Long value) {
			addCriterion("id_tipo_documento <>", value, "idTipoDocumento");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocumentoGreaterThan(Long value) {
			addCriterion("id_tipo_documento >", value, "idTipoDocumento");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocumentoGreaterThanOrEqualTo(Long value) {
			addCriterion("id_tipo_documento >=", value, "idTipoDocumento");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocumentoLessThan(Long value) {
			addCriterion("id_tipo_documento <", value, "idTipoDocumento");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocumentoLessThanOrEqualTo(Long value) {
			addCriterion("id_tipo_documento <=", value, "idTipoDocumento");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocumentoIn(List<Long> values) {
			addCriterion("id_tipo_documento in", values, "idTipoDocumento");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocumentoNotIn(List<Long> values) {
			addCriterion("id_tipo_documento not in", values, "idTipoDocumento");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocumentoBetween(Long value1, Long value2) {
			addCriterion("id_tipo_documento between", value1, value2, "idTipoDocumento");
			return (Criteria) this;
		}

		public Criteria andIdTipoDocumentoNotBetween(Long value1, Long value2) {
			addCriterion("id_tipo_documento not between", value1, value2, "idTipoDocumento");
			return (Criteria) this;
		}

		public Criteria andNomeFileIsNull() {
			addCriterion("nome_file is null");
			return (Criteria) this;
		}

		public Criteria andNomeFileIsNotNull() {
			addCriterion("nome_file is not null");
			return (Criteria) this;
		}

		public Criteria andNomeFileEqualTo(String value) {
			addCriterion("nome_file =", value, "nomeFile");
			return (Criteria) this;
		}

		public Criteria andNomeFileNotEqualTo(String value) {
			addCriterion("nome_file <>", value, "nomeFile");
			return (Criteria) this;
		}

		public Criteria andNomeFileGreaterThan(String value) {
			addCriterion("nome_file >", value, "nomeFile");
			return (Criteria) this;
		}

		public Criteria andNomeFileGreaterThanOrEqualTo(String value) {
			addCriterion("nome_file >=", value, "nomeFile");
			return (Criteria) this;
		}

		public Criteria andNomeFileLessThan(String value) {
			addCriterion("nome_file <", value, "nomeFile");
			return (Criteria) this;
		}

		public Criteria andNomeFileLessThanOrEqualTo(String value) {
			addCriterion("nome_file <=", value, "nomeFile");
			return (Criteria) this;
		}

		public Criteria andNomeFileLike(String value) {
			addCriterion("nome_file like", value, "nomeFile");
			return (Criteria) this;
		}

		public Criteria andNomeFileNotLike(String value) {
			addCriterion("nome_file not like", value, "nomeFile");
			return (Criteria) this;
		}

		public Criteria andNomeFileIn(List<String> values) {
			addCriterion("nome_file in", values, "nomeFile");
			return (Criteria) this;
		}

		public Criteria andNomeFileNotIn(List<String> values) {
			addCriterion("nome_file not in", values, "nomeFile");
			return (Criteria) this;
		}

		public Criteria andNomeFileBetween(String value1, String value2) {
			addCriterion("nome_file between", value1, value2, "nomeFile");
			return (Criteria) this;
		}

		public Criteria andNomeFileNotBetween(String value1, String value2) {
			addCriterion("nome_file not between", value1, value2, "nomeFile");
			return (Criteria) this;
		}

		public Criteria andDataCaricamentoIsNull() {
			addCriterion("data_caricamento is null");
			return (Criteria) this;
		}

		public Criteria andDataCaricamentoIsNotNull() {
			addCriterion("data_caricamento is not null");
			return (Criteria) this;
		}

		public Criteria andDataCaricamentoEqualTo(Date value) {
			addCriterionForJDBCDate("data_caricamento =", value, "dataCaricamento");
			return (Criteria) this;
		}

		public Criteria andDataCaricamentoNotEqualTo(Date value) {
			addCriterionForJDBCDate("data_caricamento <>", value, "dataCaricamento");
			return (Criteria) this;
		}

		public Criteria andDataCaricamentoGreaterThan(Date value) {
			addCriterionForJDBCDate("data_caricamento >", value, "dataCaricamento");
			return (Criteria) this;
		}

		public Criteria andDataCaricamentoGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_caricamento >=", value, "dataCaricamento");
			return (Criteria) this;
		}

		public Criteria andDataCaricamentoLessThan(Date value) {
			addCriterionForJDBCDate("data_caricamento <", value, "dataCaricamento");
			return (Criteria) this;
		}

		public Criteria andDataCaricamentoLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_caricamento <=", value, "dataCaricamento");
			return (Criteria) this;
		}

		public Criteria andDataCaricamentoIn(List<Date> values) {
			addCriterionForJDBCDate("data_caricamento in", values, "dataCaricamento");
			return (Criteria) this;
		}

		public Criteria andDataCaricamentoNotIn(List<Date> values) {
			addCriterionForJDBCDate("data_caricamento not in", values, "dataCaricamento");
			return (Criteria) this;
		}

		public Criteria andDataCaricamentoBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_caricamento between", value1, value2, "dataCaricamento");
			return (Criteria) this;
		}

		public Criteria andDataCaricamentoNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_caricamento not between", value1, value2, "dataCaricamento");
			return (Criteria) this;
		}

		public Criteria andNoteIsNull() {
			addCriterion("note is null");
			return (Criteria) this;
		}

		public Criteria andNoteIsNotNull() {
			addCriterion("note is not null");
			return (Criteria) this;
		}

		public Criteria andNoteEqualTo(String value) {
			addCriterion("note =", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotEqualTo(String value) {
			addCriterion("note <>", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThan(String value) {
			addCriterion("note >", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThanOrEqualTo(String value) {
			addCriterion("note >=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThan(String value) {
			addCriterion("note <", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThanOrEqualTo(String value) {
			addCriterion("note <=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLike(String value) {
			addCriterion("note like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotLike(String value) {
			addCriterion("note not like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteIn(List<String> values) {
			addCriterion("note in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotIn(List<String> values) {
			addCriterion("note not in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteBetween(String value1, String value2) {
			addCriterion("note between", value1, value2, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotBetween(String value1, String value2) {
			addCriterion("note not between", value1, value2, "note");
			return (Criteria) this;
		}

		public Criteria andFkUtenteIsNull() {
			addCriterion("fk_utente is null");
			return (Criteria) this;
		}

		public Criteria andFkUtenteIsNotNull() {
			addCriterion("fk_utente is not null");
			return (Criteria) this;
		}

		public Criteria andFkUtenteEqualTo(Long value) {
			addCriterion("fk_utente =", value, "fkUtente");
			return (Criteria) this;
		}

		public Criteria andFkUtenteNotEqualTo(Long value) {
			addCriterion("fk_utente <>", value, "fkUtente");
			return (Criteria) this;
		}

		public Criteria andFkUtenteGreaterThan(Long value) {
			addCriterion("fk_utente >", value, "fkUtente");
			return (Criteria) this;
		}

		public Criteria andFkUtenteGreaterThanOrEqualTo(Long value) {
			addCriterion("fk_utente >=", value, "fkUtente");
			return (Criteria) this;
		}

		public Criteria andFkUtenteLessThan(Long value) {
			addCriterion("fk_utente <", value, "fkUtente");
			return (Criteria) this;
		}

		public Criteria andFkUtenteLessThanOrEqualTo(Long value) {
			addCriterion("fk_utente <=", value, "fkUtente");
			return (Criteria) this;
		}

		public Criteria andFkUtenteIn(List<Long> values) {
			addCriterion("fk_utente in", values, "fkUtente");
			return (Criteria) this;
		}

		public Criteria andFkUtenteNotIn(List<Long> values) {
			addCriterion("fk_utente not in", values, "fkUtente");
			return (Criteria) this;
		}

		public Criteria andFkUtenteBetween(Long value1, Long value2) {
			addCriterion("fk_utente between", value1, value2, "fkUtente");
			return (Criteria) this;
		}

		public Criteria andFkUtenteNotBetween(Long value1, Long value2) {
			addCriterion("fk_utente not between", value1, value2, "fkUtente");
			return (Criteria) this;
		}

		public Criteria andNomeFileLikeInsensitive(String value) {
			addCriterion("upper(nome_file) like", value.toUpperCase(), "nomeFile");
			return (Criteria) this;
		}

		public Criteria andNoteLikeInsensitive(String value) {
			addCriterion("upper(note) like", value.toUpperCase(), "note");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table rebus_r_doc_variaz_autobus
	 * @mbg.generated  Mon Oct 21 17:24:13 CEST 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rebus_r_doc_variaz_autobus
     *
     * @mbg.generated do_not_delete_during_merge Mon Oct 21 17:16:32 CEST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}