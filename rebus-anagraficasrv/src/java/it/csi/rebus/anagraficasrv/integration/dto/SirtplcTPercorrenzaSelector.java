/*
* SPDX-FileCopyrightText: (C) Copyright 2022 Regione Piemonte
* SPDX-License-Identifier: EUPL-1.2
*/
package it.csi.rebus.anagraficasrv.integration.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class SirtplcTPercorrenzaSelector {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    public SirtplcTPercorrenzaSelector() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdPercorrenzaIsNull() {
            addCriterion("id_percorrenza is null");
            return (Criteria) this;
        }

        public Criteria andIdPercorrenzaIsNotNull() {
            addCriterion("id_percorrenza is not null");
            return (Criteria) this;
        }

        public Criteria andIdPercorrenzaEqualTo(Long value) {
            addCriterion("id_percorrenza =", value, "idPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdPercorrenzaNotEqualTo(Long value) {
            addCriterion("id_percorrenza <>", value, "idPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdPercorrenzaGreaterThan(Long value) {
            addCriterion("id_percorrenza >", value, "idPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdPercorrenzaGreaterThanOrEqualTo(Long value) {
            addCriterion("id_percorrenza >=", value, "idPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdPercorrenzaLessThan(Long value) {
            addCriterion("id_percorrenza <", value, "idPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdPercorrenzaLessThanOrEqualTo(Long value) {
            addCriterion("id_percorrenza <=", value, "idPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdPercorrenzaIn(List<Long> values) {
            addCriterion("id_percorrenza in", values, "idPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdPercorrenzaNotIn(List<Long> values) {
            addCriterion("id_percorrenza not in", values, "idPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdPercorrenzaBetween(Long value1, Long value2) {
            addCriterion("id_percorrenza between", value1, value2, "idPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdPercorrenzaNotBetween(Long value1, Long value2) {
            addCriterion("id_percorrenza not between", value1, value2, "idPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdContrattoIsNull() {
            addCriterion("id_contratto is null");
            return (Criteria) this;
        }

        public Criteria andIdContrattoIsNotNull() {
            addCriterion("id_contratto is not null");
            return (Criteria) this;
        }

        public Criteria andIdContrattoEqualTo(Long value) {
            addCriterion("id_contratto =", value, "idContratto");
            return (Criteria) this;
        }

        public Criteria andIdContrattoNotEqualTo(Long value) {
            addCriterion("id_contratto <>", value, "idContratto");
            return (Criteria) this;
        }

        public Criteria andIdContrattoGreaterThan(Long value) {
            addCriterion("id_contratto >", value, "idContratto");
            return (Criteria) this;
        }

        public Criteria andIdContrattoGreaterThanOrEqualTo(Long value) {
            addCriterion("id_contratto >=", value, "idContratto");
            return (Criteria) this;
        }

        public Criteria andIdContrattoLessThan(Long value) {
            addCriterion("id_contratto <", value, "idContratto");
            return (Criteria) this;
        }

        public Criteria andIdContrattoLessThanOrEqualTo(Long value) {
            addCriterion("id_contratto <=", value, "idContratto");
            return (Criteria) this;
        }

        public Criteria andIdContrattoIn(List<Long> values) {
            addCriterion("id_contratto in", values, "idContratto");
            return (Criteria) this;
        }

        public Criteria andIdContrattoNotIn(List<Long> values) {
            addCriterion("id_contratto not in", values, "idContratto");
            return (Criteria) this;
        }

        public Criteria andIdContrattoBetween(Long value1, Long value2) {
            addCriterion("id_contratto between", value1, value2, "idContratto");
            return (Criteria) this;
        }

        public Criteria andIdContrattoNotBetween(Long value1, Long value2) {
            addCriterion("id_contratto not between", value1, value2, "idContratto");
            return (Criteria) this;
        }

        public Criteria andIdTipoPercorrenzaIsNull() {
            addCriterion("id_tipo_percorrenza is null");
            return (Criteria) this;
        }

        public Criteria andIdTipoPercorrenzaIsNotNull() {
            addCriterion("id_tipo_percorrenza is not null");
            return (Criteria) this;
        }

        public Criteria andIdTipoPercorrenzaEqualTo(Long value) {
            addCriterion("id_tipo_percorrenza =", value, "idTipoPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdTipoPercorrenzaNotEqualTo(Long value) {
            addCriterion("id_tipo_percorrenza <>", value, "idTipoPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdTipoPercorrenzaGreaterThan(Long value) {
            addCriterion("id_tipo_percorrenza >", value, "idTipoPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdTipoPercorrenzaGreaterThanOrEqualTo(Long value) {
            addCriterion("id_tipo_percorrenza >=", value, "idTipoPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdTipoPercorrenzaLessThan(Long value) {
            addCriterion("id_tipo_percorrenza <", value, "idTipoPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdTipoPercorrenzaLessThanOrEqualTo(Long value) {
            addCriterion("id_tipo_percorrenza <=", value, "idTipoPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdTipoPercorrenzaIn(List<Long> values) {
            addCriterion("id_tipo_percorrenza in", values, "idTipoPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdTipoPercorrenzaNotIn(List<Long> values) {
            addCriterion("id_tipo_percorrenza not in", values, "idTipoPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdTipoPercorrenzaBetween(Long value1, Long value2) {
            addCriterion("id_tipo_percorrenza between", value1, value2, "idTipoPercorrenza");
            return (Criteria) this;
        }

        public Criteria andIdTipoPercorrenzaNotBetween(Long value1, Long value2) {
            addCriterion("id_tipo_percorrenza not between", value1, value2, "idTipoPercorrenza");
            return (Criteria) this;
        }

        public Criteria andAnnoIsNull() {
            addCriterion("anno is null");
            return (Criteria) this;
        }

        public Criteria andAnnoIsNotNull() {
            addCriterion("anno is not null");
            return (Criteria) this;
        }

        public Criteria andAnnoEqualTo(Long value) {
            addCriterion("anno =", value, "anno");
            return (Criteria) this;
        }

        public Criteria andAnnoNotEqualTo(Long value) {
            addCriterion("anno <>", value, "anno");
            return (Criteria) this;
        }

        public Criteria andAnnoGreaterThan(Long value) {
            addCriterion("anno >", value, "anno");
            return (Criteria) this;
        }

        public Criteria andAnnoGreaterThanOrEqualTo(Long value) {
            addCriterion("anno >=", value, "anno");
            return (Criteria) this;
        }

        public Criteria andAnnoLessThan(Long value) {
            addCriterion("anno <", value, "anno");
            return (Criteria) this;
        }

        public Criteria andAnnoLessThanOrEqualTo(Long value) {
            addCriterion("anno <=", value, "anno");
            return (Criteria) this;
        }

        public Criteria andAnnoIn(List<Long> values) {
            addCriterion("anno in", values, "anno");
            return (Criteria) this;
        }

        public Criteria andAnnoNotIn(List<Long> values) {
            addCriterion("anno not in", values, "anno");
            return (Criteria) this;
        }

        public Criteria andAnnoBetween(Long value1, Long value2) {
            addCriterion("anno between", value1, value2, "anno");
            return (Criteria) this;
        }

        public Criteria andAnnoNotBetween(Long value1, Long value2) {
            addCriterion("anno not between", value1, value2, "anno");
            return (Criteria) this;
        }

        public Criteria andVersioneIsNull() {
            addCriterion("versione is null");
            return (Criteria) this;
        }

        public Criteria andVersioneIsNotNull() {
            addCriterion("versione is not null");
            return (Criteria) this;
        }

        public Criteria andVersioneEqualTo(Long value) {
            addCriterion("versione =", value, "versione");
            return (Criteria) this;
        }

        public Criteria andVersioneNotEqualTo(Long value) {
            addCriterion("versione <>", value, "versione");
            return (Criteria) this;
        }

        public Criteria andVersioneGreaterThan(Long value) {
            addCriterion("versione >", value, "versione");
            return (Criteria) this;
        }

        public Criteria andVersioneGreaterThanOrEqualTo(Long value) {
            addCriterion("versione >=", value, "versione");
            return (Criteria) this;
        }

        public Criteria andVersioneLessThan(Long value) {
            addCriterion("versione <", value, "versione");
            return (Criteria) this;
        }

        public Criteria andVersioneLessThanOrEqualTo(Long value) {
            addCriterion("versione <=", value, "versione");
            return (Criteria) this;
        }

        public Criteria andVersioneIn(List<Long> values) {
            addCriterion("versione in", values, "versione");
            return (Criteria) this;
        }

        public Criteria andVersioneNotIn(List<Long> values) {
            addCriterion("versione not in", values, "versione");
            return (Criteria) this;
        }

        public Criteria andVersioneBetween(Long value1, Long value2) {
            addCriterion("versione between", value1, value2, "versione");
            return (Criteria) this;
        }

        public Criteria andVersioneNotBetween(Long value1, Long value2) {
            addCriterion("versione not between", value1, value2, "versione");
            return (Criteria) this;
        }

        public Criteria andChilometriProgrammatiIsNull() {
            addCriterion("chilometri_programmati is null");
            return (Criteria) this;
        }

        public Criteria andChilometriProgrammatiIsNotNull() {
            addCriterion("chilometri_programmati is not null");
            return (Criteria) this;
        }

        public Criteria andChilometriProgrammatiEqualTo(Long value) {
            addCriterion("chilometri_programmati =", value, "chilometriProgrammati");
            return (Criteria) this;
        }

        public Criteria andChilometriProgrammatiNotEqualTo(Long value) {
            addCriterion("chilometri_programmati <>", value, "chilometriProgrammati");
            return (Criteria) this;
        }

        public Criteria andChilometriProgrammatiGreaterThan(Long value) {
            addCriterion("chilometri_programmati >", value, "chilometriProgrammati");
            return (Criteria) this;
        }

        public Criteria andChilometriProgrammatiGreaterThanOrEqualTo(Long value) {
            addCriterion("chilometri_programmati >=", value, "chilometriProgrammati");
            return (Criteria) this;
        }

        public Criteria andChilometriProgrammatiLessThan(Long value) {
            addCriterion("chilometri_programmati <", value, "chilometriProgrammati");
            return (Criteria) this;
        }

        public Criteria andChilometriProgrammatiLessThanOrEqualTo(Long value) {
            addCriterion("chilometri_programmati <=", value, "chilometriProgrammati");
            return (Criteria) this;
        }

        public Criteria andChilometriProgrammatiIn(List<Long> values) {
            addCriterion("chilometri_programmati in", values, "chilometriProgrammati");
            return (Criteria) this;
        }

        public Criteria andChilometriProgrammatiNotIn(List<Long> values) {
            addCriterion("chilometri_programmati not in", values, "chilometriProgrammati");
            return (Criteria) this;
        }

        public Criteria andChilometriProgrammatiBetween(Long value1, Long value2) {
            addCriterion("chilometri_programmati between", value1, value2, "chilometriProgrammati");
            return (Criteria) this;
        }

        public Criteria andChilometriProgrammatiNotBetween(Long value1, Long value2) {
            addCriterion("chilometri_programmati not between", value1, value2, "chilometriProgrammati");
            return (Criteria) this;
        }

        public Criteria andDataCompilazioneIsNull() {
            addCriterion("data_compilazione is null");
            return (Criteria) this;
        }

        public Criteria andDataCompilazioneIsNotNull() {
            addCriterion("data_compilazione is not null");
            return (Criteria) this;
        }

        public Criteria andDataCompilazioneEqualTo(Date value) {
            addCriterionForJDBCDate("data_compilazione =", value, "dataCompilazione");
            return (Criteria) this;
        }

        public Criteria andDataCompilazioneNotEqualTo(Date value) {
            addCriterionForJDBCDate("data_compilazione <>", value, "dataCompilazione");
            return (Criteria) this;
        }

        public Criteria andDataCompilazioneGreaterThan(Date value) {
            addCriterionForJDBCDate("data_compilazione >", value, "dataCompilazione");
            return (Criteria) this;
        }

        public Criteria andDataCompilazioneGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("data_compilazione >=", value, "dataCompilazione");
            return (Criteria) this;
        }

        public Criteria andDataCompilazioneLessThan(Date value) {
            addCriterionForJDBCDate("data_compilazione <", value, "dataCompilazione");
            return (Criteria) this;
        }

        public Criteria andDataCompilazioneLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("data_compilazione <=", value, "dataCompilazione");
            return (Criteria) this;
        }

        public Criteria andDataCompilazioneIn(List<Date> values) {
            addCriterionForJDBCDate("data_compilazione in", values, "dataCompilazione");
            return (Criteria) this;
        }

        public Criteria andDataCompilazioneNotIn(List<Date> values) {
            addCriterionForJDBCDate("data_compilazione not in", values, "dataCompilazione");
            return (Criteria) this;
        }

        public Criteria andDataCompilazioneBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("data_compilazione between", value1, value2, "dataCompilazione");
            return (Criteria) this;
        }

        public Criteria andDataCompilazioneNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("data_compilazione not between", value1, value2, "dataCompilazione");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("note is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("note is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("note =", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("note <>", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("note >", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("note >=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("note <", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("note <=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("note like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("note not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("note in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("note not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("note between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("note not between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLikeInsensitive(String value) {
            addCriterion("upper(note) like", value.toUpperCase(), "note");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated do_not_delete_during_merge Mon Nov 04 11:33:48 CET 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sirtplc_t_percorrenza
     *
     * @mbg.generated Mon Nov 04 11:33:48 CET 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}