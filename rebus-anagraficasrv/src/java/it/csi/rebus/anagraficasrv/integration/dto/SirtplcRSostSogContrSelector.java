/*
* SPDX-FileCopyrightText: (C) Copyright 2022 Regione Piemonte
* SPDX-License-Identifier: EUPL-1.2
*/
package it.csi.rebus.anagraficasrv.integration.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class SirtplcRSostSogContrSelector {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	public SirtplcRSostSogContrSelector() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdSostSogContrIsNull() {
			addCriterion("id_sost_sog_contr is null");
			return (Criteria) this;
		}

		public Criteria andIdSostSogContrIsNotNull() {
			addCriterion("id_sost_sog_contr is not null");
			return (Criteria) this;
		}

		public Criteria andIdSostSogContrEqualTo(Long value) {
			addCriterion("id_sost_sog_contr =", value, "idSostSogContr");
			return (Criteria) this;
		}

		public Criteria andIdSostSogContrNotEqualTo(Long value) {
			addCriterion("id_sost_sog_contr <>", value, "idSostSogContr");
			return (Criteria) this;
		}

		public Criteria andIdSostSogContrGreaterThan(Long value) {
			addCriterion("id_sost_sog_contr >", value, "idSostSogContr");
			return (Criteria) this;
		}

		public Criteria andIdSostSogContrGreaterThanOrEqualTo(Long value) {
			addCriterion("id_sost_sog_contr >=", value, "idSostSogContr");
			return (Criteria) this;
		}

		public Criteria andIdSostSogContrLessThan(Long value) {
			addCriterion("id_sost_sog_contr <", value, "idSostSogContr");
			return (Criteria) this;
		}

		public Criteria andIdSostSogContrLessThanOrEqualTo(Long value) {
			addCriterion("id_sost_sog_contr <=", value, "idSostSogContr");
			return (Criteria) this;
		}

		public Criteria andIdSostSogContrIn(List<Long> values) {
			addCriterion("id_sost_sog_contr in", values, "idSostSogContr");
			return (Criteria) this;
		}

		public Criteria andIdSostSogContrNotIn(List<Long> values) {
			addCriterion("id_sost_sog_contr not in", values, "idSostSogContr");
			return (Criteria) this;
		}

		public Criteria andIdSostSogContrBetween(Long value1, Long value2) {
			addCriterion("id_sost_sog_contr between", value1, value2, "idSostSogContr");
			return (Criteria) this;
		}

		public Criteria andIdSostSogContrNotBetween(Long value1, Long value2) {
			addCriterion("id_sost_sog_contr not between", value1, value2, "idSostSogContr");
			return (Criteria) this;
		}

		public Criteria andIdContrattoIsNull() {
			addCriterion("id_contratto is null");
			return (Criteria) this;
		}

		public Criteria andIdContrattoIsNotNull() {
			addCriterion("id_contratto is not null");
			return (Criteria) this;
		}

		public Criteria andIdContrattoEqualTo(Long value) {
			addCriterion("id_contratto =", value, "idContratto");
			return (Criteria) this;
		}

		public Criteria andIdContrattoNotEqualTo(Long value) {
			addCriterion("id_contratto <>", value, "idContratto");
			return (Criteria) this;
		}

		public Criteria andIdContrattoGreaterThan(Long value) {
			addCriterion("id_contratto >", value, "idContratto");
			return (Criteria) this;
		}

		public Criteria andIdContrattoGreaterThanOrEqualTo(Long value) {
			addCriterion("id_contratto >=", value, "idContratto");
			return (Criteria) this;
		}

		public Criteria andIdContrattoLessThan(Long value) {
			addCriterion("id_contratto <", value, "idContratto");
			return (Criteria) this;
		}

		public Criteria andIdContrattoLessThanOrEqualTo(Long value) {
			addCriterion("id_contratto <=", value, "idContratto");
			return (Criteria) this;
		}

		public Criteria andIdContrattoIn(List<Long> values) {
			addCriterion("id_contratto in", values, "idContratto");
			return (Criteria) this;
		}

		public Criteria andIdContrattoNotIn(List<Long> values) {
			addCriterion("id_contratto not in", values, "idContratto");
			return (Criteria) this;
		}

		public Criteria andIdContrattoBetween(Long value1, Long value2) {
			addCriterion("id_contratto between", value1, value2, "idContratto");
			return (Criteria) this;
		}

		public Criteria andIdContrattoNotBetween(Long value1, Long value2) {
			addCriterion("id_contratto not between", value1, value2, "idContratto");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridCommittenteIsNull() {
			addCriterion("id_sog_giurid_committente is null");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridCommittenteIsNotNull() {
			addCriterion("id_sog_giurid_committente is not null");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridCommittenteEqualTo(Long value) {
			addCriterion("id_sog_giurid_committente =", value, "idSogGiuridCommittente");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridCommittenteNotEqualTo(Long value) {
			addCriterion("id_sog_giurid_committente <>", value, "idSogGiuridCommittente");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridCommittenteGreaterThan(Long value) {
			addCriterion("id_sog_giurid_committente >", value, "idSogGiuridCommittente");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridCommittenteGreaterThanOrEqualTo(Long value) {
			addCriterion("id_sog_giurid_committente >=", value, "idSogGiuridCommittente");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridCommittenteLessThan(Long value) {
			addCriterion("id_sog_giurid_committente <", value, "idSogGiuridCommittente");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridCommittenteLessThanOrEqualTo(Long value) {
			addCriterion("id_sog_giurid_committente <=", value, "idSogGiuridCommittente");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridCommittenteIn(List<Long> values) {
			addCriterion("id_sog_giurid_committente in", values, "idSogGiuridCommittente");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridCommittenteNotIn(List<Long> values) {
			addCriterion("id_sog_giurid_committente not in", values, "idSogGiuridCommittente");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridCommittenteBetween(Long value1, Long value2) {
			addCriterion("id_sog_giurid_committente between", value1, value2, "idSogGiuridCommittente");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridCommittenteNotBetween(Long value1, Long value2) {
			addCriterion("id_sog_giurid_committente not between", value1, value2, "idSogGiuridCommittente");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridEsecutoreIsNull() {
			addCriterion("id_sog_giurid_esecutore is null");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridEsecutoreIsNotNull() {
			addCriterion("id_sog_giurid_esecutore is not null");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridEsecutoreEqualTo(Long value) {
			addCriterion("id_sog_giurid_esecutore =", value, "idSogGiuridEsecutore");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridEsecutoreNotEqualTo(Long value) {
			addCriterion("id_sog_giurid_esecutore <>", value, "idSogGiuridEsecutore");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridEsecutoreGreaterThan(Long value) {
			addCriterion("id_sog_giurid_esecutore >", value, "idSogGiuridEsecutore");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridEsecutoreGreaterThanOrEqualTo(Long value) {
			addCriterion("id_sog_giurid_esecutore >=", value, "idSogGiuridEsecutore");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridEsecutoreLessThan(Long value) {
			addCriterion("id_sog_giurid_esecutore <", value, "idSogGiuridEsecutore");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridEsecutoreLessThanOrEqualTo(Long value) {
			addCriterion("id_sog_giurid_esecutore <=", value, "idSogGiuridEsecutore");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridEsecutoreIn(List<Long> values) {
			addCriterion("id_sog_giurid_esecutore in", values, "idSogGiuridEsecutore");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridEsecutoreNotIn(List<Long> values) {
			addCriterion("id_sog_giurid_esecutore not in", values, "idSogGiuridEsecutore");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridEsecutoreBetween(Long value1, Long value2) {
			addCriterion("id_sog_giurid_esecutore between", value1, value2, "idSogGiuridEsecutore");
			return (Criteria) this;
		}

		public Criteria andIdSogGiuridEsecutoreNotBetween(Long value1, Long value2) {
			addCriterion("id_sog_giurid_esecutore not between", value1, value2, "idSogGiuridEsecutore");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneIsNull() {
			addCriterion("atto_sostituzione is null");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneIsNotNull() {
			addCriterion("atto_sostituzione is not null");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneEqualTo(String value) {
			addCriterion("atto_sostituzione =", value, "attoSostituzione");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneNotEqualTo(String value) {
			addCriterion("atto_sostituzione <>", value, "attoSostituzione");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneGreaterThan(String value) {
			addCriterion("atto_sostituzione >", value, "attoSostituzione");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneGreaterThanOrEqualTo(String value) {
			addCriterion("atto_sostituzione >=", value, "attoSostituzione");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneLessThan(String value) {
			addCriterion("atto_sostituzione <", value, "attoSostituzione");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneLessThanOrEqualTo(String value) {
			addCriterion("atto_sostituzione <=", value, "attoSostituzione");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneLike(String value) {
			addCriterion("atto_sostituzione like", value, "attoSostituzione");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneNotLike(String value) {
			addCriterion("atto_sostituzione not like", value, "attoSostituzione");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneIn(List<String> values) {
			addCriterion("atto_sostituzione in", values, "attoSostituzione");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneNotIn(List<String> values) {
			addCriterion("atto_sostituzione not in", values, "attoSostituzione");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneBetween(String value1, String value2) {
			addCriterion("atto_sostituzione between", value1, value2, "attoSostituzione");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneNotBetween(String value1, String value2) {
			addCriterion("atto_sostituzione not between", value1, value2, "attoSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataSostituzioneIsNull() {
			addCriterion("data_sostituzione is null");
			return (Criteria) this;
		}

		public Criteria andDataSostituzioneIsNotNull() {
			addCriterion("data_sostituzione is not null");
			return (Criteria) this;
		}

		public Criteria andDataSostituzioneEqualTo(Date value) {
			addCriterionForJDBCDate("data_sostituzione =", value, "dataSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataSostituzioneNotEqualTo(Date value) {
			addCriterionForJDBCDate("data_sostituzione <>", value, "dataSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataSostituzioneGreaterThan(Date value) {
			addCriterionForJDBCDate("data_sostituzione >", value, "dataSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataSostituzioneGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_sostituzione >=", value, "dataSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataSostituzioneLessThan(Date value) {
			addCriterionForJDBCDate("data_sostituzione <", value, "dataSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataSostituzioneLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_sostituzione <=", value, "dataSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataSostituzioneIn(List<Date> values) {
			addCriterionForJDBCDate("data_sostituzione in", values, "dataSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataSostituzioneNotIn(List<Date> values) {
			addCriterionForJDBCDate("data_sostituzione not in", values, "dataSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataSostituzioneBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_sostituzione between", value1, value2, "dataSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataSostituzioneNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_sostituzione not between", value1, value2, "dataSostituzione");
			return (Criteria) this;
		}

		public Criteria andIdTipoSostituzioneIsNull() {
			addCriterion("id_tipo_sostituzione is null");
			return (Criteria) this;
		}

		public Criteria andIdTipoSostituzioneIsNotNull() {
			addCriterion("id_tipo_sostituzione is not null");
			return (Criteria) this;
		}

		public Criteria andIdTipoSostituzioneEqualTo(Long value) {
			addCriterion("id_tipo_sostituzione =", value, "idTipoSostituzione");
			return (Criteria) this;
		}

		public Criteria andIdTipoSostituzioneNotEqualTo(Long value) {
			addCriterion("id_tipo_sostituzione <>", value, "idTipoSostituzione");
			return (Criteria) this;
		}

		public Criteria andIdTipoSostituzioneGreaterThan(Long value) {
			addCriterion("id_tipo_sostituzione >", value, "idTipoSostituzione");
			return (Criteria) this;
		}

		public Criteria andIdTipoSostituzioneGreaterThanOrEqualTo(Long value) {
			addCriterion("id_tipo_sostituzione >=", value, "idTipoSostituzione");
			return (Criteria) this;
		}

		public Criteria andIdTipoSostituzioneLessThan(Long value) {
			addCriterion("id_tipo_sostituzione <", value, "idTipoSostituzione");
			return (Criteria) this;
		}

		public Criteria andIdTipoSostituzioneLessThanOrEqualTo(Long value) {
			addCriterion("id_tipo_sostituzione <=", value, "idTipoSostituzione");
			return (Criteria) this;
		}

		public Criteria andIdTipoSostituzioneIn(List<Long> values) {
			addCriterion("id_tipo_sostituzione in", values, "idTipoSostituzione");
			return (Criteria) this;
		}

		public Criteria andIdTipoSostituzioneNotIn(List<Long> values) {
			addCriterion("id_tipo_sostituzione not in", values, "idTipoSostituzione");
			return (Criteria) this;
		}

		public Criteria andIdTipoSostituzioneBetween(Long value1, Long value2) {
			addCriterion("id_tipo_sostituzione between", value1, value2, "idTipoSostituzione");
			return (Criteria) this;
		}

		public Criteria andIdTipoSostituzioneNotBetween(Long value1, Long value2) {
			addCriterion("id_tipo_sostituzione not between", value1, value2, "idTipoSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataFineSostituzioneIsNull() {
			addCriterion("data_fine_sostituzione is null");
			return (Criteria) this;
		}

		public Criteria andDataFineSostituzioneIsNotNull() {
			addCriterion("data_fine_sostituzione is not null");
			return (Criteria) this;
		}

		public Criteria andDataFineSostituzioneEqualTo(Date value) {
			addCriterionForJDBCDate("data_fine_sostituzione =", value, "dataFineSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataFineSostituzioneNotEqualTo(Date value) {
			addCriterionForJDBCDate("data_fine_sostituzione <>", value, "dataFineSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataFineSostituzioneGreaterThan(Date value) {
			addCriterionForJDBCDate("data_fine_sostituzione >", value, "dataFineSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataFineSostituzioneGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_fine_sostituzione >=", value, "dataFineSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataFineSostituzioneLessThan(Date value) {
			addCriterionForJDBCDate("data_fine_sostituzione <", value, "dataFineSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataFineSostituzioneLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_fine_sostituzione <=", value, "dataFineSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataFineSostituzioneIn(List<Date> values) {
			addCriterionForJDBCDate("data_fine_sostituzione in", values, "dataFineSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataFineSostituzioneNotIn(List<Date> values) {
			addCriterionForJDBCDate("data_fine_sostituzione not in", values, "dataFineSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataFineSostituzioneBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_fine_sostituzione between", value1, value2, "dataFineSostituzione");
			return (Criteria) this;
		}

		public Criteria andDataFineSostituzioneNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_fine_sostituzione not between", value1, value2, "dataFineSostituzione");
			return (Criteria) this;
		}

		public Criteria andAttoSostituzioneLikeInsensitive(String value) {
			addCriterion("upper(atto_sostituzione) like", value.toUpperCase(), "attoSostituzione");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table sirtplc_r_sost_sog_contr
	 * @mbg.generated  Wed Dec 16 10:32:01 CET 2020
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sirtplc_r_sost_sog_contr
     *
     * @mbg.generated do_not_delete_during_merge Mon Nov 04 11:33:48 CET 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}